# To create a docker network:
#   docker network create --subnet=192.168.0.0/16 fedlang_network
# To build the image:
#   docker build -f Dockerfile.director -t fedlang/director .
# To run the image:
#   docker run -v /home/ubuntu/stats_all_clients:/app/stats --env FL_COOKIE=cookie_123456789 --env FL_DIRECTOR_MBOX=mboxDirector --env FL_DIRECTOR_NAME=director@192.168.0.2 -d -t -h director --net fedlang_network --ip 192.168.0.2  --name fedlang-director fedlang/director
# To connect to a running container:
#   docker exec -it fedlang-director /bin/bash

FROM erlang:25.3.2.6-slim

WORKDIR /app
COPY ./requirements.txt ./requirements.txt

RUN apt-get update \
	&& apt-get -y install python3.9 unzip zip procps build-essential python3-pip net-tools curl \
	&& apt-get install -y git

RUN curl https://sh.rustup.rs -sSf | bash -s -- -y \
	&& . "$HOME/.cargo/env" \
	&& pip3 install --upgrade pip \
	&& pip install --upgrade pip \
	&& pip3 install pyopenssl setuptools-rust semantic_version \
	&& pip3 install -r requirements.txt \
	&& update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1 \
	&& mkdir logs \
	&& mkdir stats

COPY ./Pyrlang ./Pyrlang
COPY ./Term ./Term

ENV PATH="/root/.cargo/bin:${PATH}"

WORKDIR /app/Term

RUN pip3 install .

WORKDIR /app/Pyrlang

RUN pip3 install .

WORKDIR /app

COPY ./src/erlang_server ./src/erlang_server
COPY ./src/python_server ./src/python_server
COPY ./src/python_common ./src/python_common
COPY ./datasets ./datasets
COPY ./configs ./configs

RUN erlc src/erlang_server/*.erl

CMD ["sh", "src/erlang_server/director.sh"]
